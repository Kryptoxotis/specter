const OpenAI = require("openai");

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

const response = await openai.responses.create({
  model: "o4-mini",
  input: [
    {
      "role": "developer",
      "content": [
        {
          "type": "input_text",
          "text": "Summary:\nSpectre operates with a checklist-first, plan-driven, permission-based discipline. Every action, question, answer, and error is logged. If it’s not in the plan, don’t do it. If it’s not logged, it didn’t happen. Only agents act in their defined role. User ambiguity is always logged and resolved—no exceptions.\n\n1. Context & Stack\nLanguage: Node.js / TypeScript\n\nArchitecture: Modular, agent-based\n\nProjects: Website, Automation\n\nIntegrations: GitHub, Notion, Supabase, Vercel, n8n\n\nMemory: ChromaDB (full interaction history)\n\n2. Core Rules\nPlanning & Execution\n\nMust generate a detailed execution plan before any code/action.\n\nMust strictly follow the approved checklist/plan.\n\nMay modify project files only.\n\nPermissions\n\nMay NOT modify own codebase or delete files without explicit, logged approval.\n\nMust request explicit permission before learning from third-party projects.\n\nResilience & Safety\n\nMust suggest fixes/escalate on external failure—never crash or go silent.\n\nMust operate via checklist-based execution tracks.\n\nLogging\n\nMust log every action, question, answer (including ambiguity), error, retry, and decision.\n\nAll logs are structured (JSON), unique, versioned, and complete.\n\n3. Agents & Roles\nAgent\tFunction\nQuestioner\tAsks ≥10 context-relevant questions per project\nPlanner\tBreaks tasks into step-by-step plans; updates plan\nExecutor\tRuns code/deployment, one step at a time per plan\nReviewer\tReviews outputs for requirement/plan compliance\nValidator\tConfirms project completion/functionality\nLogger\tWrites all structured logs; ensures trace/versioning\n\nAgents may act only within their defined roles. No agent may self-modify or overstep without explicit, logged approval.\n\n4. Execution Tracks\n4.1 Planning & Questioning\n\nIdentify project type (website/automation)\n\nAsk at least 10 context-relevant questions\n\nStore/log all answers (including ambiguous)\n\nSave answers in ChromaDB\n\nGenerate/log full execution plan\n\nPresent plan for explicit, logged approval\nMust not proceed until approval is logged\n\n4.2 Learning & Memory\n\nLog all interactions/decisions in ChromaDB\n\nAnalyze post-project: log which questions/steps worked/failed\n\nUpdate question patterns/templates/retry logic\n\nLog learnings for review\n\n4.3 Project Execution\n\nWebsites:\n\nGenerate GitHub repo (scoped)\n\nPush starter files\n\nUse Notion/Supabase as CMS\n\nCreate admin dashboard\n\nLink CRUD between CMS and frontend\n\nAutomations:\n\nUse n8n-client.ts for visual workflows\n\nOffer workflow as JSON export or direct n8n upload\n\n4.4 Integration Layer\n\nMCP GitHub: .env auth, repo ops only\n\nMCP Notion: read/write DBs\n\nMCP Supabase: optional fallback\n\nOn error: retry, log, suggest fix\nNever crash—always escalate and log failures\n\n4.5 Deployment\n\nValidate GitHub push\n\nTrigger Vercel deployment\n\nLog deployment outcome\n\nOn failure: log error, suggest rollback, escalate\n\n4.6 Safety & Permissions\n\nLog every file modification and all API usage\n\nAlways request/log approval for:\n\nModifying own code\n\nDeleting files\n\nUsing third-party data\n\n4.7 Self-Improvement\n\nCompare plan vs. execution post-project\n\nLog successes/failures; propose improvements\n\nMust request/log permission before updating agent logic/templates\n\n5. Logging\nAll actions must be logged as unique, parseable JSON\n\nEach log includes:\n\nid (unique, e.g., UUID or \"log-0042\")\n\ntimestamp (ISO8601)\n\nagent\n\naction\n\nstatus (e.g., \"awaiting approval\", \"complete\", \"error\", \"ambiguous\")\n\nversion (e.g., \"v1.0.0\")\n\nConditional:\n\nproject_type, questions_asked, user_answers (array), ambiguity, next_step, error, retry_count, file_modified, api_call, approval\n\nIf a required field cannot be determined:\n\nSet status = \"error\"\n\nAdd error field with cause\n\nEscalate in the next log\n\nVersions use semantic format: v<Major>.<Minor>.<Patch>\n\nOmit conditionals if not relevant; never set to null\n\nExample Log Entry:\n\njson\nCopy\nEdit\n{\n  \"id\": \"log-0031\",\n  \"timestamp\": \"2025-07-21T15:05:12Z\",\n  \"agent\": \"questioner\",\n  \"action\": \"asked user project details\",\n  \"status\": \"ambiguous\",\n  \"version\": \"v1.0.0\",\n  \"questions_asked\": 10,\n  \"user_answers\": [\n    {\n      \"question\": \"What is the core automation goal?\",\n      \"answer\": \"unclear\",\n      \"followup\": \"Could you clarify the types of triggers you expect?\"\n    }\n  ],\n  \"ambiguity\": \"User answer was not specific about triggers\",\n  \"next_step\": \"await user clarification\"\n}\n6. User Input & Ambiguity Handling\nAll user answers logged, clear or ambiguous\n\nIf ambiguous:\n\nSet status = \"ambiguous\"\n\nAdd ambiguity field with details\n\nAgent must rephrase/follow up (log both)\n\nMust not proceed with ambiguity—always request clarity, log all attempts, escalate if unresolved\n\n7. Traceability & Versioning\nEvery log: unique id and version\n\nAll actions/questions/decisions must be logged—no gaps\n\n8. Prohibited Behaviors\nNo side features/ad-libbing\n\nNo infinite loops\n\nNever modify own code or delete files without explicit, logged approval\n\nNever skip steps/log entries; if unsure—log, ask, escalate\n\n9. Success Criteria\nExecution plan: ≥5 steps and 10 questions\n\nProject fully built and deployed\n\nComplete, unique, versioned logs for all actions (errors, retries, ambiguity included)\n\nLearning data updated in Chroma/SQLite\n\nNo plan/execution drift\n\nNo hallucinations, infinite loops, or crashes\n\nSpectre is checklist-first, log-everything, permission-based, plan-driven.\nNo logging? It didn’t happen. Not in the plan? Don’t do it.\nAgents act only in role. User ambiguity is always logged, never ignored.\nNo exceptions—ever."
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "what that n8n mcp you have access to"
        }
      ]
    },
    {
      "id": "mcpl_687d3f48c9cc81989def5d20295fa2dd0a8dd91b150e0e64",
      "type": "mcp_list_tools",
      "server_label": "N8N",
      "tools": [
        {
          "annotations": null,
          "description": "Use MCP client",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": true
          },
          "name": "MCP_Client1"
        }
      ]
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "Great question! Here’s a breakdown:\n\n### What is n8n?\n[n8n](https://n8n.io/) is an open-source workflow automation tool that lets you connect different apps and services (like Zapier or Make/Integromat). You can automate tasks, transfer data between platforms, and build complex workflows visually.\n\n### What is MCP?\nMCP in this context is likely a custom integration or a module (\"namespace mcp_N8N\") added to n8n. It generally stands for **Multi-Channel Platform** or **Management Control Platform**, but it could be a specific system you (or your organization) use, which has an API.\n\n### What is the `mcp_N8N` tool I can use?\nIn this environment, **`mcp_N8N`** refers to special access I have to a set of functions or workflows built around the connection between n8n and MCP. These functions can be used to trigger, fetch, or send data to/from MCP via n8n.\n\n#### For example:\n- You might create a workflow in n8n that pulls data from your MCP system and sends it to another app (e.g., sends a Slack message, updates a Google Sheet, etc.).\n- Using this tool, I can (with your prompt) initiate one of these workflows or get information that n8n fetches from MCP.\n\n#### The exposed function:\n- `MCP_Client1` — Looks like it's a function to interact with your MCP via n8n. (The exact purpose would depend on your setup! Often, these fetch some data or trigger a specific MCP workflow.)\n\n---\n\n**If you’d like a demo or example (e.g., “Fetch latest tickets from MCP”) just let me know!**\nIf you have specific workflows in MCP you want to automate, describe them and I’ll help build an n8n flow (or explain how this tool can be used for it)."
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "so test it and use it"
        }
      ]
    },
    {
      "id": "mcpr_687d3f5db1f08198b894a0c50f771d340a8dd91b150e0e64",
      "type": "mcp_approval_request",
      "arguments": "{}",
      "name": "MCP_Client1",
      "server_label": "N8N"
    },
    {
      "type": "mcp_approval_response",
      "approval_request_id": "mcpr_687d3f5db1f08198b894a0c50f771d340a8dd91b150e0e64",
      "approve": true
    },
    {
      "id": "mcp_687d3f6054148198b89ca662333c526e0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": "mcpr_687d3f5db1f08198b894a0c50f771d340a8dd91b150e0e64",
      "arguments": "{}",
      "error": {
        "type": "http_error",
        "code": 424,
        "message": "424: unhandled errors in a TaskGroup (1 sub-exception)"
      },
      "name": "MCP_Client1",
      "output": null,
      "server_label": "N8N"
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "It looks like there was an error when I tried to use the `MCP_Client1` function—the MCP server returned an error and didn’t provide any additional information (“None”).\n\n### What this means:\n- Either the MCP server (or the function) is not currently available or not properly configured.\n- There might be an authentication or connectivity issue.\n- Alternatively, the function might require some input (parameters, IDs, etc.) to operate.\n\n### Next Steps:\n- If you have admin access, you could check the n8n and MCP server logs for errors.\n- If there are specific things you want to try (like providing an input or calling a different function), let me know!\n- If you want to share more about what “MCP” refers to in your environment, I can help tailor the troubleshooting.\n\n**Let me know if you’d like to…**\n- Try passing any parameters.\n- Troubleshoot further.\n- Get example n8n workflow ideas for MCP integrations."
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "test it one more time"
        }
      ]
    },
    {
      "id": "mcpr_687d441ad0b88198ad87ec7965f973690a8dd91b150e0e64",
      "type": "mcp_approval_request",
      "arguments": "{}",
      "name": "MCP_Client1",
      "server_label": "N8N"
    },
    {
      "type": "mcp_approval_response",
      "approval_request_id": "mcpr_687d441ad0b88198ad87ec7965f973690a8dd91b150e0e64",
      "approve": true
    },
    {
      "id": "mcp_687d441d042c819881b6fe9202cf43550a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": "mcpr_687d441ad0b88198ad87ec7965f973690a8dd91b150e0e64",
      "arguments": "{}",
      "error": null,
      "name": "MCP_Client1",
      "output": "[{\"tools\": [{\"name\": \"tools_documentation\", \"description\": \"Get documentation for n8n MCP tools. Call without parameters for quick start guide. Use topic parameter to get documentation for specific tools. Use depth='full' for comprehensive documentation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"topic\": {\"type\": \"string\", \"description\": \"Tool name (e.g., \\\"search_nodes\\\") or \\\"overview\\\" for general guide. Leave empty for quick reference.\"}, \"depth\": {\"type\": \"string\", \"description\": \"Level of detail. \\\"essentials\\\" (default) for quick reference, \\\"full\\\" for comprehensive docs.\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_nodes\", \"description\": \"List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \\\"n8n-nodes-base\\\" or \\\"@n8n/n8n-nodes-langchain\\\". Categories: trigger/transform/output/input.\", \"schema\": {\"type\": \"object\", \"properties\": {\"package\": {\"type\": \"string\", \"description\": \"\\\"n8n-nodes-base\\\" (core) or \\\"@n8n/n8n-nodes-langchain\\\" (AI)\"}, \"category\": {\"type\": \"string\", \"description\": \"trigger|transform|output|input|AI\"}, \"developmentStyle\": {\"type\": \"string\", \"description\": \"Usually \\\"programmatic\\\"\"}, \"isAITool\": {\"type\": \"boolean\", \"description\": \"Filter AI-capable nodes\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 50, use 200+ for all)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_info\", \"description\": \"Get FULL node schema (100KB+). TIP: Use get_node_essentials first! Returns all properties/operations/credentials. Prefix required: \\\"nodes-base.httpRequest\\\" not \\\"httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.{name}\\\" or \\\"nodes-langchain.{name}\\\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_nodes\", \"description\": \"Search nodes by keywords. Modes: OR (any word), AND (all words), FUZZY (typos OK). Primary nodes ranked first. Examples: \\\"webhook\\\"\\u2192Webhook, \\\"http call\\\"\\u2192HTTP Request.\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search terms. Use quotes for exact phrase.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}, \"mode\": {\"type\": \"string\", \"description\": \"OR=any word, AND=all words, FUZZY=typo-tolerant\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_ai_tools\", \"description\": \"List 263 AI-optimized nodes. Note: ANY node can be AI tool! Connect any node to AI Agent's tool port. Community nodes need N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_documentation\", \"description\": \"Get readable docs with examples/auth/patterns. Better than raw schema! 87% coverage. Format: \\\"nodes-base.slack\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix: \\\"nodes-base.slack\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_database_statistics\", \"description\": \"Node stats: 525 total, 263 AI tools, 104 triggers, 87% docs coverage. Verifies MCP working.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_essentials\", \"description\": \"Get 10-20 key properties only (<5KB vs 100KB+). USE THIS FIRST! Includes examples. Format: \\\"nodes-base.httpRequest\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.httpRequest\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_node_properties\", \"description\": \"Find specific properties in a node (auth, headers, body, etc). Returns paths and descriptions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix\"}, \"query\": {\"type\": \"string\", \"description\": \"Property to find: \\\"auth\\\", \\\"header\\\", \\\"body\\\", \\\"json\\\"\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}}, \"required\": [\"nodeType\", \"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_for_task\", \"description\": \"Get pre-configured node for tasks: post_json_request, receive_webhook, query_database, send_slack_message, etc. Use list_tasks for all.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"Task name. See list_tasks for options.\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_tasks\", \"description\": \"List task templates by category: HTTP/API, Webhooks, Database, AI, Data Processing, Communication.\", \"schema\": {\"type\": \"object\", \"properties\": {\"category\": {\"type\": \"string\", \"description\": \"Filter by category (optional)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_operation\", \"description\": \"Validate node config. Checks required fields, types, operation rules. Returns errors with fixes. Essential for Slack/Sheets/DB nodes.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Your node configuration. Must include operation fields (resource/operation/action) if the node has multiple operations.\"}, \"profile\": {\"type\": \"string\", \"description\": \"Validation profile: minimal (only required fields), runtime (critical errors only), ai-friendly (balanced - default), strict (all checks including best practices)\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_minimal\", \"description\": \"Fast check for missing required fields only. No warnings/suggestions. Returns: list of missing fields.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The node configuration to check\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_property_dependencies\", \"description\": \"Shows property dependencies and visibility rules. Example: sendBody=true reveals body fields. Test visibility with optional config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to analyze (e.g., \\\"nodes-base.httpRequest\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional partial configuration to check visibility impact\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_as_tool_info\", \"description\": \"How to use ANY node as AI tool. Shows requirements, use cases, examples. Works for all nodes, not just AI-marked ones.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full node type WITH prefix: \\\"nodes-base.slack\\\", \\\"nodes-base.googleSheets\\\", etc.\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_node_templates\", \"description\": \"Find templates using specific nodes. 399 community workflows. Use FULL types: \\\"n8n-nodes-base.httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeTypes\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Array of node types to search for (e.g., [\\\"n8n-nodes-base.httpRequest\\\", \\\"n8n-nodes-base.openAi\\\"])\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of templates to return. Default 10.\"}}, \"required\": [\"nodeTypes\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_template\", \"description\": \"Get complete workflow JSON by ID. Ready to import. IDs from list_node_templates or search_templates.\", \"schema\": {\"type\": \"object\", \"properties\": {\"templateId\": {\"type\": \"number\", \"description\": \"The template ID to retrieve\"}}, \"required\": [\"templateId\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_templates\", \"description\": \"Search templates by name/description keywords. NOT for node types! For nodes use list_node_templates. Example: \\\"chatbot\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search query for template names/descriptions. NOT for node types! Examples: \\\"chatbot\\\", \\\"automation\\\", \\\"social media\\\", \\\"webhook\\\". For node-based search use list_node_templates instead.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of results. Default 20.\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_templates_for_task\", \"description\": \"Curated templates by task: ai_automation, data_sync, webhooks, email, slack, data_transform, files, scheduling, api, database.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"The type of task to get templates for\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow\", \"description\": \"Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The complete workflow JSON to validate. Must include nodes array and connections object.\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional validation settings\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_connections\", \"description\": \"Check workflow connections only: valid nodes, no cycles, proper triggers, AI tool links. Fast structure validation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON with nodes array and connections object.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_expressions\", \"description\": \"Validate n8n expressions: syntax {{}}, variables ($json/$node), references. Returns errors with locations.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON to check for expression errors.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_create_workflow\", \"description\": \"Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"Workflow name (required)\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow connections object. Keys are source node IDs, values define output connections\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional workflow settings (execution order, timezone, error handling)\"}}, \"required\": [\"name\", \"nodes\", \"connections\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow\", \"description\": \"Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_details\", \"description\": \"Get workflow details with metadata, version, execution stats. More info than get_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_structure\", \"description\": \"Get workflow structure: nodes and connections only. No parameter details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_minimal\", \"description\": \"Get minimal info: ID, name, active status, tags. Fast for listings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_full_workflow\", \"description\": \"Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"name\": {\"type\": \"string\", \"description\": \"New workflow name\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Complete array of workflow nodes (required if modifying workflow structure)\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Complete connections object (required if modifying workflow structure)\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow settings to update\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_partial_workflow\", \"description\": \"Update workflow incrementally with diff operations. Max 5 ops. Types: addNode, removeNode, updateNode, moveNode, enable/disableNode, addConnection, removeConnection, updateSettings, updateName, add/removeTag. See tools_documentation(\\\"n8n_update_partial_workflow\\\", \\\"full\\\") for details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"operations\": {\"type\": \"array\", \"description\": \"Array of diff operations to apply. Each operation must have a \\\"type\\\" field and relevant properties for that operation type.\"}, \"validateOnly\": {\"type\": \"boolean\", \"description\": \"If true, only validate operations without applying them\"}}, \"required\": [\"id\", \"operations\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_workflow\", \"description\": \"Permanently delete a workflow. This action cannot be undone.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_workflows\", \"description\": \"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of workflows to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"active\": {\"type\": \"boolean\", \"description\": \"Filter by active status\"}, \"tags\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Filter by tags (exact match)\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"excludePinnedData\": {\"type\": \"boolean\", \"description\": \"Exclude pinned data from response (default: true)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_validate_workflow\", \"description\": \"Validate workflow by ID. Checks nodes, connections, expressions. Returns errors/warnings/suggestions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to validate\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Validation options\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_trigger_webhook_workflow\", \"description\": \"Trigger workflow via webhook. Must be ACTIVE with Webhook node. Method must match config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"webhookUrl\": {\"type\": \"string\", \"description\": \"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)\"}, \"httpMethod\": {\"type\": \"string\", \"description\": \"HTTP method (must match webhook configuration, often GET)\"}, \"data\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Data to send with the webhook request\"}, \"headers\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Additional HTTP headers\"}, \"waitForResponse\": {\"type\": \"boolean\", \"description\": \"Wait for workflow completion (default: true)\"}}, \"required\": [\"webhookUrl\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_execution\", \"description\": \"Get details of a specific execution by ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include full execution data (default: false)\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_executions\", \"description\": \"List workflow executions (returns up to limit). Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of executions to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"workflowId\": {\"type\": \"string\", \"description\": \"Filter by workflow ID\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"status\": {\"type\": \"string\", \"description\": \"Filter by execution status\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include execution data (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_execution\", \"description\": \"Delete an execution record. This only removes the execution history, not any data processed.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_health_check\", \"description\": \"Check n8n instance health and API connectivity. Returns status and available features.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_available_tools\", \"description\": \"List available n8n tools and capabilities.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_diagnostic\", \"description\": \"Diagnose n8n API config. Shows tool status, API connectivity, env vars. Helps troubleshoot missing tools.\", \"schema\": {\"type\": \"object\", \"properties\": {\"verbose\": {\"type\": \"boolean\", \"description\": \"Include detailed debug information (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}]}]",
      "server_label": "N8N"
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "The test worked! Here’s what I’ve learned:\n\n**The n8n MCP integration gives you access to a toolkit for working with n8n workflows, nodes, and automation tasks, programmatically.**\n\n### What you can do with this MCP n8n integration:\n- **List nodes**: Discover all available n8n nodes (core, AI, and more)\n- **Get node documentation**: Retrieve how-to guides or in-depth docs on any node\n- **Search nodes & templates**: Quickly find relevant nodes by keyword or get workflow templates for your use case\n- **Validate nodes & workflows**: Check your nodes and workflows for errors or missing fields before deploying\n- **Perform workflow operations**: Create, update, delete, list workflows, see their structure, and validate them\n- **Trigger (execute) workflows**: You can run workflows via webhook, check executions, or view execution history\n- **Health check/diagnostics**: Test if your n8n instance is working, and what features are enabled\n\n### Example actions you might request:\n- “List all available AI nodes”\n- “Get documentation for the HTTP request node”\n- “Find all workflow templates that use Google Sheets”\n- “Validate this workflow before I deploy it”\n- “Trigger a webhook workflow and watch for the result”\n\n**Would you like to try a specific action?** If yes, just describe what you want to do — for example:  \n- “Show me all trigger nodes”  \n- “How do I use the Slack node?”  \n- “Check if the n8n service is healthy”  \n- “List the five most recently active workflows”"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "list my workflow"
        }
      ]
    },
    {
      "id": "mcpr_687d4434e1c48198bf06d9f05c242acc0a8dd91b150e0e64",
      "type": "mcp_approval_request",
      "arguments": "{}",
      "name": "MCP_Client1",
      "server_label": "N8N"
    },
    {
      "type": "mcp_approval_response",
      "approval_request_id": "mcpr_687d4434e1c48198bf06d9f05c242acc0a8dd91b150e0e64",
      "approve": true
    },
    {
      "id": "mcp_687d44367d9881989bba3d44c91d90ed0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": "mcpr_687d4434e1c48198bf06d9f05c242acc0a8dd91b150e0e64",
      "arguments": "{}",
      "error": null,
      "name": "MCP_Client1",
      "output": "[{\"tools\": [{\"name\": \"tools_documentation\", \"description\": \"Get documentation for n8n MCP tools. Call without parameters for quick start guide. Use topic parameter to get documentation for specific tools. Use depth='full' for comprehensive documentation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"topic\": {\"type\": \"string\", \"description\": \"Tool name (e.g., \\\"search_nodes\\\") or \\\"overview\\\" for general guide. Leave empty for quick reference.\"}, \"depth\": {\"type\": \"string\", \"description\": \"Level of detail. \\\"essentials\\\" (default) for quick reference, \\\"full\\\" for comprehensive docs.\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_nodes\", \"description\": \"List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \\\"n8n-nodes-base\\\" or \\\"@n8n/n8n-nodes-langchain\\\". Categories: trigger/transform/output/input.\", \"schema\": {\"type\": \"object\", \"properties\": {\"package\": {\"type\": \"string\", \"description\": \"\\\"n8n-nodes-base\\\" (core) or \\\"@n8n/n8n-nodes-langchain\\\" (AI)\"}, \"category\": {\"type\": \"string\", \"description\": \"trigger|transform|output|input|AI\"}, \"developmentStyle\": {\"type\": \"string\", \"description\": \"Usually \\\"programmatic\\\"\"}, \"isAITool\": {\"type\": \"boolean\", \"description\": \"Filter AI-capable nodes\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 50, use 200+ for all)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_info\", \"description\": \"Get FULL node schema (100KB+). TIP: Use get_node_essentials first! Returns all properties/operations/credentials. Prefix required: \\\"nodes-base.httpRequest\\\" not \\\"httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.{name}\\\" or \\\"nodes-langchain.{name}\\\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_nodes\", \"description\": \"Search nodes by keywords. Modes: OR (any word), AND (all words), FUZZY (typos OK). Primary nodes ranked first. Examples: \\\"webhook\\\"\\u2192Webhook, \\\"http call\\\"\\u2192HTTP Request.\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search terms. Use quotes for exact phrase.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}, \"mode\": {\"type\": \"string\", \"description\": \"OR=any word, AND=all words, FUZZY=typo-tolerant\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_ai_tools\", \"description\": \"List 263 AI-optimized nodes. Note: ANY node can be AI tool! Connect any node to AI Agent's tool port. Community nodes need N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_documentation\", \"description\": \"Get readable docs with examples/auth/patterns. Better than raw schema! 87% coverage. Format: \\\"nodes-base.slack\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix: \\\"nodes-base.slack\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_database_statistics\", \"description\": \"Node stats: 525 total, 263 AI tools, 104 triggers, 87% docs coverage. Verifies MCP working.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_essentials\", \"description\": \"Get 10-20 key properties only (<5KB vs 100KB+). USE THIS FIRST! Includes examples. Format: \\\"nodes-base.httpRequest\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.httpRequest\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_node_properties\", \"description\": \"Find specific properties in a node (auth, headers, body, etc). Returns paths and descriptions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix\"}, \"query\": {\"type\": \"string\", \"description\": \"Property to find: \\\"auth\\\", \\\"header\\\", \\\"body\\\", \\\"json\\\"\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}}, \"required\": [\"nodeType\", \"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_for_task\", \"description\": \"Get pre-configured node for tasks: post_json_request, receive_webhook, query_database, send_slack_message, etc. Use list_tasks for all.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"Task name. See list_tasks for options.\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_tasks\", \"description\": \"List task templates by category: HTTP/API, Webhooks, Database, AI, Data Processing, Communication.\", \"schema\": {\"type\": \"object\", \"properties\": {\"category\": {\"type\": \"string\", \"description\": \"Filter by category (optional)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_operation\", \"description\": \"Validate node config. Checks required fields, types, operation rules. Returns errors with fixes. Essential for Slack/Sheets/DB nodes.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Your node configuration. Must include operation fields (resource/operation/action) if the node has multiple operations.\"}, \"profile\": {\"type\": \"string\", \"description\": \"Validation profile: minimal (only required fields), runtime (critical errors only), ai-friendly (balanced - default), strict (all checks including best practices)\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_minimal\", \"description\": \"Fast check for missing required fields only. No warnings/suggestions. Returns: list of missing fields.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The node configuration to check\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_property_dependencies\", \"description\": \"Shows property dependencies and visibility rules. Example: sendBody=true reveals body fields. Test visibility with optional config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to analyze (e.g., \\\"nodes-base.httpRequest\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional partial configuration to check visibility impact\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_as_tool_info\", \"description\": \"How to use ANY node as AI tool. Shows requirements, use cases, examples. Works for all nodes, not just AI-marked ones.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full node type WITH prefix: \\\"nodes-base.slack\\\", \\\"nodes-base.googleSheets\\\", etc.\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_node_templates\", \"description\": \"Find templates using specific nodes. 399 community workflows. Use FULL types: \\\"n8n-nodes-base.httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeTypes\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Array of node types to search for (e.g., [\\\"n8n-nodes-base.httpRequest\\\", \\\"n8n-nodes-base.openAi\\\"])\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of templates to return. Default 10.\"}}, \"required\": [\"nodeTypes\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_template\", \"description\": \"Get complete workflow JSON by ID. Ready to import. IDs from list_node_templates or search_templates.\", \"schema\": {\"type\": \"object\", \"properties\": {\"templateId\": {\"type\": \"number\", \"description\": \"The template ID to retrieve\"}}, \"required\": [\"templateId\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_templates\", \"description\": \"Search templates by name/description keywords. NOT for node types! For nodes use list_node_templates. Example: \\\"chatbot\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search query for template names/descriptions. NOT for node types! Examples: \\\"chatbot\\\", \\\"automation\\\", \\\"social media\\\", \\\"webhook\\\". For node-based search use list_node_templates instead.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of results. Default 20.\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_templates_for_task\", \"description\": \"Curated templates by task: ai_automation, data_sync, webhooks, email, slack, data_transform, files, scheduling, api, database.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"The type of task to get templates for\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow\", \"description\": \"Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The complete workflow JSON to validate. Must include nodes array and connections object.\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional validation settings\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_connections\", \"description\": \"Check workflow connections only: valid nodes, no cycles, proper triggers, AI tool links. Fast structure validation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON with nodes array and connections object.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_expressions\", \"description\": \"Validate n8n expressions: syntax {{}}, variables ($json/$node), references. Returns errors with locations.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON to check for expression errors.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_create_workflow\", \"description\": \"Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"Workflow name (required)\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow connections object. Keys are source node IDs, values define output connections\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional workflow settings (execution order, timezone, error handling)\"}}, \"required\": [\"name\", \"nodes\", \"connections\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow\", \"description\": \"Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_details\", \"description\": \"Get workflow details with metadata, version, execution stats. More info than get_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_structure\", \"description\": \"Get workflow structure: nodes and connections only. No parameter details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_minimal\", \"description\": \"Get minimal info: ID, name, active status, tags. Fast for listings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_full_workflow\", \"description\": \"Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"name\": {\"type\": \"string\", \"description\": \"New workflow name\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Complete array of workflow nodes (required if modifying workflow structure)\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Complete connections object (required if modifying workflow structure)\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow settings to update\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_partial_workflow\", \"description\": \"Update workflow incrementally with diff operations. Max 5 ops. Types: addNode, removeNode, updateNode, moveNode, enable/disableNode, addConnection, removeConnection, updateSettings, updateName, add/removeTag. See tools_documentation(\\\"n8n_update_partial_workflow\\\", \\\"full\\\") for details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"operations\": {\"type\": \"array\", \"description\": \"Array of diff operations to apply. Each operation must have a \\\"type\\\" field and relevant properties for that operation type.\"}, \"validateOnly\": {\"type\": \"boolean\", \"description\": \"If true, only validate operations without applying them\"}}, \"required\": [\"id\", \"operations\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_workflow\", \"description\": \"Permanently delete a workflow. This action cannot be undone.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_workflows\", \"description\": \"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of workflows to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"active\": {\"type\": \"boolean\", \"description\": \"Filter by active status\"}, \"tags\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Filter by tags (exact match)\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"excludePinnedData\": {\"type\": \"boolean\", \"description\": \"Exclude pinned data from response (default: true)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_validate_workflow\", \"description\": \"Validate workflow by ID. Checks nodes, connections, expressions. Returns errors/warnings/suggestions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to validate\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Validation options\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_trigger_webhook_workflow\", \"description\": \"Trigger workflow via webhook. Must be ACTIVE with Webhook node. Method must match config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"webhookUrl\": {\"type\": \"string\", \"description\": \"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)\"}, \"httpMethod\": {\"type\": \"string\", \"description\": \"HTTP method (must match webhook configuration, often GET)\"}, \"data\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Data to send with the webhook request\"}, \"headers\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Additional HTTP headers\"}, \"waitForResponse\": {\"type\": \"boolean\", \"description\": \"Wait for workflow completion (default: true)\"}}, \"required\": [\"webhookUrl\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_execution\", \"description\": \"Get details of a specific execution by ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include full execution data (default: false)\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_executions\", \"description\": \"List workflow executions (returns up to limit). Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of executions to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"workflowId\": {\"type\": \"string\", \"description\": \"Filter by workflow ID\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"status\": {\"type\": \"string\", \"description\": \"Filter by execution status\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include execution data (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_execution\", \"description\": \"Delete an execution record. This only removes the execution history, not any data processed.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_health_check\", \"description\": \"Check n8n instance health and API connectivity. Returns status and available features.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_available_tools\", \"description\": \"List available n8n tools and capabilities.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_diagnostic\", \"description\": \"Diagnose n8n API config. Shows tool status, API connectivity, env vars. Helps troubleshoot missing tools.\", \"schema\": {\"type\": \"object\", \"properties\": {\"verbose\": {\"type\": \"boolean\", \"description\": \"Include detailed debug information (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}]}]",
      "server_label": "N8N"
    },
    {
      "id": "mcpr_687d4440b3a8819888c837d4aa6448e50a8dd91b150e0e64",
      "type": "mcp_approval_request",
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"description\":\"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\",\"schema\":{\"type\":\"object\",\"properties\":{\"limit\":{\"type\":\"number\",\"description\":\"Number of workflows to return (1-100, default: 100)}\"},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}}]}",
      "name": "MCP_Client1",
      "server_label": "N8N"
    },
    {
      "type": "mcp_approval_response",
      "approval_request_id": "mcpr_687d4440b3a8819888c837d4aa6448e50a8dd91b150e0e64",
      "approve": true
    },
    {
      "id": "mcp_687d44450a5c8198a7ade801f49250780a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": "mcpr_687d4440b3a8819888c837d4aa6448e50a8dd91b150e0e64",
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"description\":\"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\",\"schema\":{\"type\":\"object\",\"properties\":{\"limit\":{\"type\":\"number\",\"description\":\"Number of workflows to return (1-100, default: 100)}\"},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}}]}",
      "error": null,
      "name": "MCP_Client1",
      "output": "[{\"tools\": [{\"name\": \"tools_documentation\", \"description\": \"Get documentation for n8n MCP tools. Call without parameters for quick start guide. Use topic parameter to get documentation for specific tools. Use depth='full' for comprehensive documentation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"topic\": {\"type\": \"string\", \"description\": \"Tool name (e.g., \\\"search_nodes\\\") or \\\"overview\\\" for general guide. Leave empty for quick reference.\"}, \"depth\": {\"type\": \"string\", \"description\": \"Level of detail. \\\"essentials\\\" (default) for quick reference, \\\"full\\\" for comprehensive docs.\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_nodes\", \"description\": \"List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \\\"n8n-nodes-base\\\" or \\\"@n8n/n8n-nodes-langchain\\\". Categories: trigger/transform/output/input.\", \"schema\": {\"type\": \"object\", \"properties\": {\"package\": {\"type\": \"string\", \"description\": \"\\\"n8n-nodes-base\\\" (core) or \\\"@n8n/n8n-nodes-langchain\\\" (AI)\"}, \"category\": {\"type\": \"string\", \"description\": \"trigger|transform|output|input|AI\"}, \"developmentStyle\": {\"type\": \"string\", \"description\": \"Usually \\\"programmatic\\\"\"}, \"isAITool\": {\"type\": \"boolean\", \"description\": \"Filter AI-capable nodes\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 50, use 200+ for all)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_info\", \"description\": \"Get FULL node schema (100KB+). TIP: Use get_node_essentials first! Returns all properties/operations/credentials. Prefix required: \\\"nodes-base.httpRequest\\\" not \\\"httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.{name}\\\" or \\\"nodes-langchain.{name}\\\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_nodes\", \"description\": \"Search nodes by keywords. Modes: OR (any word), AND (all words), FUZZY (typos OK). Primary nodes ranked first. Examples: \\\"webhook\\\"\\u2192Webhook, \\\"http call\\\"\\u2192HTTP Request.\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search terms. Use quotes for exact phrase.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}, \"mode\": {\"type\": \"string\", \"description\": \"OR=any word, AND=all words, FUZZY=typo-tolerant\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_ai_tools\", \"description\": \"List 263 AI-optimized nodes. Note: ANY node can be AI tool! Connect any node to AI Agent's tool port. Community nodes need N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_documentation\", \"description\": \"Get readable docs with examples/auth/patterns. Better than raw schema! 87% coverage. Format: \\\"nodes-base.slack\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix: \\\"nodes-base.slack\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_database_statistics\", \"description\": \"Node stats: 525 total, 263 AI tools, 104 triggers, 87% docs coverage. Verifies MCP working.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_essentials\", \"description\": \"Get 10-20 key properties only (<5KB vs 100KB+). USE THIS FIRST! Includes examples. Format: \\\"nodes-base.httpRequest\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.httpRequest\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_node_properties\", \"description\": \"Find specific properties in a node (auth, headers, body, etc). Returns paths and descriptions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix\"}, \"query\": {\"type\": \"string\", \"description\": \"Property to find: \\\"auth\\\", \\\"header\\\", \\\"body\\\", \\\"json\\\"\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}}, \"required\": [\"nodeType\", \"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_for_task\", \"description\": \"Get pre-configured node for tasks: post_json_request, receive_webhook, query_database, send_slack_message, etc. Use list_tasks for all.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"Task name. See list_tasks for options.\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_tasks\", \"description\": \"List task templates by category: HTTP/API, Webhooks, Database, AI, Data Processing, Communication.\", \"schema\": {\"type\": \"object\", \"properties\": {\"category\": {\"type\": \"string\", \"description\": \"Filter by category (optional)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_operation\", \"description\": \"Validate node config. Checks required fields, types, operation rules. Returns errors with fixes. Essential for Slack/Sheets/DB nodes.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Your node configuration. Must include operation fields (resource/operation/action) if the node has multiple operations.\"}, \"profile\": {\"type\": \"string\", \"description\": \"Validation profile: minimal (only required fields), runtime (critical errors only), ai-friendly (balanced - default), strict (all checks including best practices)\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_minimal\", \"description\": \"Fast check for missing required fields only. No warnings/suggestions. Returns: list of missing fields.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The node configuration to check\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_property_dependencies\", \"description\": \"Shows property dependencies and visibility rules. Example: sendBody=true reveals body fields. Test visibility with optional config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to analyze (e.g., \\\"nodes-base.httpRequest\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional partial configuration to check visibility impact\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_as_tool_info\", \"description\": \"How to use ANY node as AI tool. Shows requirements, use cases, examples. Works for all nodes, not just AI-marked ones.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full node type WITH prefix: \\\"nodes-base.slack\\\", \\\"nodes-base.googleSheets\\\", etc.\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_node_templates\", \"description\": \"Find templates using specific nodes. 399 community workflows. Use FULL types: \\\"n8n-nodes-base.httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeTypes\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Array of node types to search for (e.g., [\\\"n8n-nodes-base.httpRequest\\\", \\\"n8n-nodes-base.openAi\\\"])\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of templates to return. Default 10.\"}}, \"required\": [\"nodeTypes\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_template\", \"description\": \"Get complete workflow JSON by ID. Ready to import. IDs from list_node_templates or search_templates.\", \"schema\": {\"type\": \"object\", \"properties\": {\"templateId\": {\"type\": \"number\", \"description\": \"The template ID to retrieve\"}}, \"required\": [\"templateId\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_templates\", \"description\": \"Search templates by name/description keywords. NOT for node types! For nodes use list_node_templates. Example: \\\"chatbot\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search query for template names/descriptions. NOT for node types! Examples: \\\"chatbot\\\", \\\"automation\\\", \\\"social media\\\", \\\"webhook\\\". For node-based search use list_node_templates instead.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of results. Default 20.\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_templates_for_task\", \"description\": \"Curated templates by task: ai_automation, data_sync, webhooks, email, slack, data_transform, files, scheduling, api, database.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"The type of task to get templates for\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow\", \"description\": \"Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The complete workflow JSON to validate. Must include nodes array and connections object.\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional validation settings\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_connections\", \"description\": \"Check workflow connections only: valid nodes, no cycles, proper triggers, AI tool links. Fast structure validation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON with nodes array and connections object.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_expressions\", \"description\": \"Validate n8n expressions: syntax {{}}, variables ($json/$node), references. Returns errors with locations.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON to check for expression errors.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_create_workflow\", \"description\": \"Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"Workflow name (required)\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow connections object. Keys are source node IDs, values define output connections\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional workflow settings (execution order, timezone, error handling)\"}}, \"required\": [\"name\", \"nodes\", \"connections\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow\", \"description\": \"Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_details\", \"description\": \"Get workflow details with metadata, version, execution stats. More info than get_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_structure\", \"description\": \"Get workflow structure: nodes and connections only. No parameter details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_minimal\", \"description\": \"Get minimal info: ID, name, active status, tags. Fast for listings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_full_workflow\", \"description\": \"Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"name\": {\"type\": \"string\", \"description\": \"New workflow name\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Complete array of workflow nodes (required if modifying workflow structure)\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Complete connections object (required if modifying workflow structure)\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow settings to update\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_partial_workflow\", \"description\": \"Update workflow incrementally with diff operations. Max 5 ops. Types: addNode, removeNode, updateNode, moveNode, enable/disableNode, addConnection, removeConnection, updateSettings, updateName, add/removeTag. See tools_documentation(\\\"n8n_update_partial_workflow\\\", \\\"full\\\") for details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"operations\": {\"type\": \"array\", \"description\": \"Array of diff operations to apply. Each operation must have a \\\"type\\\" field and relevant properties for that operation type.\"}, \"validateOnly\": {\"type\": \"boolean\", \"description\": \"If true, only validate operations without applying them\"}}, \"required\": [\"id\", \"operations\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_workflow\", \"description\": \"Permanently delete a workflow. This action cannot be undone.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_workflows\", \"description\": \"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of workflows to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"active\": {\"type\": \"boolean\", \"description\": \"Filter by active status\"}, \"tags\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Filter by tags (exact match)\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"excludePinnedData\": {\"type\": \"boolean\", \"description\": \"Exclude pinned data from response (default: true)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_validate_workflow\", \"description\": \"Validate workflow by ID. Checks nodes, connections, expressions. Returns errors/warnings/suggestions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to validate\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Validation options\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_trigger_webhook_workflow\", \"description\": \"Trigger workflow via webhook. Must be ACTIVE with Webhook node. Method must match config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"webhookUrl\": {\"type\": \"string\", \"description\": \"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)\"}, \"httpMethod\": {\"type\": \"string\", \"description\": \"HTTP method (must match webhook configuration, often GET)\"}, \"data\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Data to send with the webhook request\"}, \"headers\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Additional HTTP headers\"}, \"waitForResponse\": {\"type\": \"boolean\", \"description\": \"Wait for workflow completion (default: true)\"}}, \"required\": [\"webhookUrl\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_execution\", \"description\": \"Get details of a specific execution by ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include full execution data (default: false)\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_executions\", \"description\": \"List workflow executions (returns up to limit). Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of executions to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"workflowId\": {\"type\": \"string\", \"description\": \"Filter by workflow ID\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"status\": {\"type\": \"string\", \"description\": \"Filter by execution status\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include execution data (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_execution\", \"description\": \"Delete an execution record. This only removes the execution history, not any data processed.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_health_check\", \"description\": \"Check n8n instance health and API connectivity. Returns status and available features.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_available_tools\", \"description\": \"List available n8n tools and capabilities.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_diagnostic\", \"description\": \"Diagnose n8n API config. Shows tool status, API connectivity, env vars. Helps troubleshoot missing tools.\", \"schema\": {\"type\": \"object\", \"properties\": {\"verbose\": {\"type\": \"boolean\", \"description\": \"Include detailed debug information (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}]}]",
      "server_label": "N8N"
    },
    {
      "id": "mcpr_687d444f079c8198b0b53fbf0ce7d5c10a8dd91b150e0e64",
      "type": "mcp_approval_request",
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"parameters\":{\"limit\":20}}]}",
      "name": "MCP_Client1",
      "server_label": "N8N"
    },
    {
      "type": "mcp_approval_response",
      "approval_request_id": "mcpr_687d444f079c8198b0b53fbf0ce7d5c10a8dd91b150e0e64",
      "approve": true
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "list my workflows"
        }
      ]
    },
    {
      "id": "mcp_687d44cb87a48198940769233b412aab0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": "mcpr_687d444f079c8198b0b53fbf0ce7d5c10a8dd91b150e0e64",
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"parameters\":{\"limit\":20}}]}",
      "error": null,
      "name": "MCP_Client1",
      "output": "[{\"tools\": [{\"name\": \"tools_documentation\", \"description\": \"Get documentation for n8n MCP tools. Call without parameters for quick start guide. Use topic parameter to get documentation for specific tools. Use depth='full' for comprehensive documentation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"topic\": {\"type\": \"string\", \"description\": \"Tool name (e.g., \\\"search_nodes\\\") or \\\"overview\\\" for general guide. Leave empty for quick reference.\"}, \"depth\": {\"type\": \"string\", \"description\": \"Level of detail. \\\"essentials\\\" (default) for quick reference, \\\"full\\\" for comprehensive docs.\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_nodes\", \"description\": \"List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \\\"n8n-nodes-base\\\" or \\\"@n8n/n8n-nodes-langchain\\\". Categories: trigger/transform/output/input.\", \"schema\": {\"type\": \"object\", \"properties\": {\"package\": {\"type\": \"string\", \"description\": \"\\\"n8n-nodes-base\\\" (core) or \\\"@n8n/n8n-nodes-langchain\\\" (AI)\"}, \"category\": {\"type\": \"string\", \"description\": \"trigger|transform|output|input|AI\"}, \"developmentStyle\": {\"type\": \"string\", \"description\": \"Usually \\\"programmatic\\\"\"}, \"isAITool\": {\"type\": \"boolean\", \"description\": \"Filter AI-capable nodes\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 50, use 200+ for all)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_info\", \"description\": \"Get FULL node schema (100KB+). TIP: Use get_node_essentials first! Returns all properties/operations/credentials. Prefix required: \\\"nodes-base.httpRequest\\\" not \\\"httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.{name}\\\" or \\\"nodes-langchain.{name}\\\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_nodes\", \"description\": \"Search nodes by keywords. Modes: OR (any word), AND (all words), FUZZY (typos OK). Primary nodes ranked first. Examples: \\\"webhook\\\"\\u2192Webhook, \\\"http call\\\"\\u2192HTTP Request.\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search terms. Use quotes for exact phrase.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}, \"mode\": {\"type\": \"string\", \"description\": \"OR=any word, AND=all words, FUZZY=typo-tolerant\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_ai_tools\", \"description\": \"List 263 AI-optimized nodes. Note: ANY node can be AI tool! Connect any node to AI Agent's tool port. Community nodes need N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_documentation\", \"description\": \"Get readable docs with examples/auth/patterns. Better than raw schema! 87% coverage. Format: \\\"nodes-base.slack\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix: \\\"nodes-base.slack\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_database_statistics\", \"description\": \"Node stats: 525 total, 263 AI tools, 104 triggers, 87% docs coverage. Verifies MCP working.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_essentials\", \"description\": \"Get 10-20 key properties only (<5KB vs 100KB+). USE THIS FIRST! Includes examples. Format: \\\"nodes-base.httpRequest\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.httpRequest\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_node_properties\", \"description\": \"Find specific properties in a node (auth, headers, body, etc). Returns paths and descriptions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix\"}, \"query\": {\"type\": \"string\", \"description\": \"Property to find: \\\"auth\\\", \\\"header\\\", \\\"body\\\", \\\"json\\\"\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}}, \"required\": [\"nodeType\", \"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_for_task\", \"description\": \"Get pre-configured node for tasks: post_json_request, receive_webhook, query_database, send_slack_message, etc. Use list_tasks for all.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"Task name. See list_tasks for options.\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_tasks\", \"description\": \"List task templates by category: HTTP/API, Webhooks, Database, AI, Data Processing, Communication.\", \"schema\": {\"type\": \"object\", \"properties\": {\"category\": {\"type\": \"string\", \"description\": \"Filter by category (optional)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_operation\", \"description\": \"Validate node config. Checks required fields, types, operation rules. Returns errors with fixes. Essential for Slack/Sheets/DB nodes.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Your node configuration. Must include operation fields (resource/operation/action) if the node has multiple operations.\"}, \"profile\": {\"type\": \"string\", \"description\": \"Validation profile: minimal (only required fields), runtime (critical errors only), ai-friendly (balanced - default), strict (all checks including best practices)\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_minimal\", \"description\": \"Fast check for missing required fields only. No warnings/suggestions. Returns: list of missing fields.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The node configuration to check\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_property_dependencies\", \"description\": \"Shows property dependencies and visibility rules. Example: sendBody=true reveals body fields. Test visibility with optional config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to analyze (e.g., \\\"nodes-base.httpRequest\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional partial configuration to check visibility impact\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_as_tool_info\", \"description\": \"How to use ANY node as AI tool. Shows requirements, use cases, examples. Works for all nodes, not just AI-marked ones.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full node type WITH prefix: \\\"nodes-base.slack\\\", \\\"nodes-base.googleSheets\\\", etc.\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_node_templates\", \"description\": \"Find templates using specific nodes. 399 community workflows. Use FULL types: \\\"n8n-nodes-base.httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeTypes\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Array of node types to search for (e.g., [\\\"n8n-nodes-base.httpRequest\\\", \\\"n8n-nodes-base.openAi\\\"])\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of templates to return. Default 10.\"}}, \"required\": [\"nodeTypes\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_template\", \"description\": \"Get complete workflow JSON by ID. Ready to import. IDs from list_node_templates or search_templates.\", \"schema\": {\"type\": \"object\", \"properties\": {\"templateId\": {\"type\": \"number\", \"description\": \"The template ID to retrieve\"}}, \"required\": [\"templateId\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_templates\", \"description\": \"Search templates by name/description keywords. NOT for node types! For nodes use list_node_templates. Example: \\\"chatbot\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search query for template names/descriptions. NOT for node types! Examples: \\\"chatbot\\\", \\\"automation\\\", \\\"social media\\\", \\\"webhook\\\". For node-based search use list_node_templates instead.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of results. Default 20.\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_templates_for_task\", \"description\": \"Curated templates by task: ai_automation, data_sync, webhooks, email, slack, data_transform, files, scheduling, api, database.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"The type of task to get templates for\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow\", \"description\": \"Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The complete workflow JSON to validate. Must include nodes array and connections object.\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional validation settings\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_connections\", \"description\": \"Check workflow connections only: valid nodes, no cycles, proper triggers, AI tool links. Fast structure validation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON with nodes array and connections object.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_expressions\", \"description\": \"Validate n8n expressions: syntax {{}}, variables ($json/$node), references. Returns errors with locations.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON to check for expression errors.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_create_workflow\", \"description\": \"Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"Workflow name (required)\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow connections object. Keys are source node IDs, values define output connections\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional workflow settings (execution order, timezone, error handling)\"}}, \"required\": [\"name\", \"nodes\", \"connections\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow\", \"description\": \"Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_details\", \"description\": \"Get workflow details with metadata, version, execution stats. More info than get_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_structure\", \"description\": \"Get workflow structure: nodes and connections only. No parameter details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_minimal\", \"description\": \"Get minimal info: ID, name, active status, tags. Fast for listings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_full_workflow\", \"description\": \"Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"name\": {\"type\": \"string\", \"description\": \"New workflow name\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Complete array of workflow nodes (required if modifying workflow structure)\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Complete connections object (required if modifying workflow structure)\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow settings to update\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_partial_workflow\", \"description\": \"Update workflow incrementally with diff operations. Max 5 ops. Types: addNode, removeNode, updateNode, moveNode, enable/disableNode, addConnection, removeConnection, updateSettings, updateName, add/removeTag. See tools_documentation(\\\"n8n_update_partial_workflow\\\", \\\"full\\\") for details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"operations\": {\"type\": \"array\", \"description\": \"Array of diff operations to apply. Each operation must have a \\\"type\\\" field and relevant properties for that operation type.\"}, \"validateOnly\": {\"type\": \"boolean\", \"description\": \"If true, only validate operations without applying them\"}}, \"required\": [\"id\", \"operations\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_workflow\", \"description\": \"Permanently delete a workflow. This action cannot be undone.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_workflows\", \"description\": \"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of workflows to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"active\": {\"type\": \"boolean\", \"description\": \"Filter by active status\"}, \"tags\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Filter by tags (exact match)\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"excludePinnedData\": {\"type\": \"boolean\", \"description\": \"Exclude pinned data from response (default: true)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_validate_workflow\", \"description\": \"Validate workflow by ID. Checks nodes, connections, expressions. Returns errors/warnings/suggestions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to validate\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Validation options\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_trigger_webhook_workflow\", \"description\": \"Trigger workflow via webhook. Must be ACTIVE with Webhook node. Method must match config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"webhookUrl\": {\"type\": \"string\", \"description\": \"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)\"}, \"httpMethod\": {\"type\": \"string\", \"description\": \"HTTP method (must match webhook configuration, often GET)\"}, \"data\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Data to send with the webhook request\"}, \"headers\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Additional HTTP headers\"}, \"waitForResponse\": {\"type\": \"boolean\", \"description\": \"Wait for workflow completion (default: true)\"}}, \"required\": [\"webhookUrl\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_execution\", \"description\": \"Get details of a specific execution by ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include full execution data (default: false)\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_executions\", \"description\": \"List workflow executions (returns up to limit). Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of executions to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"workflowId\": {\"type\": \"string\", \"description\": \"Filter by workflow ID\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"status\": {\"type\": \"string\", \"description\": \"Filter by execution status\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include execution data (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_execution\", \"description\": \"Delete an execution record. This only removes the execution history, not any data processed.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_health_check\", \"description\": \"Check n8n instance health and API connectivity. Returns status and available features.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_available_tools\", \"description\": \"List available n8n tools and capabilities.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_diagnostic\", \"description\": \"Diagnose n8n API config. Shows tool status, API connectivity, env vars. Helps troubleshoot missing tools.\", \"schema\": {\"type\": \"object\", \"properties\": {\"verbose\": {\"type\": \"boolean\", \"description\": \"Include detailed debug information (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}]}]",
      "server_label": "N8N"
    },
    {
      "id": "mcpr_687d44d6389c8198ab206d7070ee2d160a8dd91b150e0e64",
      "type": "mcp_approval_request",
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"parameters\":{\"limit\":20}}]}",
      "name": "MCP_Client1",
      "server_label": "N8N"
    },
    {
      "type": "mcp_approval_response",
      "approval_request_id": "mcpr_687d44d6389c8198ab206d7070ee2d160a8dd91b150e0e64",
      "approve": true
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "list my workflows"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "list my workflows"
        }
      ]
    },
    {
      "id": "mcp_687d456237d48198841df4439c7c92ac0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": "mcpr_687d44d6389c8198ab206d7070ee2d160a8dd91b150e0e64",
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"parameters\":{\"limit\":20}}]}",
      "error": null,
      "name": "MCP_Client1",
      "output": "[{\"tools\": [{\"name\": \"tools_documentation\", \"description\": \"Get documentation for n8n MCP tools. Call without parameters for quick start guide. Use topic parameter to get documentation for specific tools. Use depth='full' for comprehensive documentation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"topic\": {\"type\": \"string\", \"description\": \"Tool name (e.g., \\\"search_nodes\\\") or \\\"overview\\\" for general guide. Leave empty for quick reference.\"}, \"depth\": {\"type\": \"string\", \"description\": \"Level of detail. \\\"essentials\\\" (default) for quick reference, \\\"full\\\" for comprehensive docs.\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_nodes\", \"description\": \"List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \\\"n8n-nodes-base\\\" or \\\"@n8n/n8n-nodes-langchain\\\". Categories: trigger/transform/output/input.\", \"schema\": {\"type\": \"object\", \"properties\": {\"package\": {\"type\": \"string\", \"description\": \"\\\"n8n-nodes-base\\\" (core) or \\\"@n8n/n8n-nodes-langchain\\\" (AI)\"}, \"category\": {\"type\": \"string\", \"description\": \"trigger|transform|output|input|AI\"}, \"developmentStyle\": {\"type\": \"string\", \"description\": \"Usually \\\"programmatic\\\"\"}, \"isAITool\": {\"type\": \"boolean\", \"description\": \"Filter AI-capable nodes\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 50, use 200+ for all)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_info\", \"description\": \"Get FULL node schema (100KB+). TIP: Use get_node_essentials first! Returns all properties/operations/credentials. Prefix required: \\\"nodes-base.httpRequest\\\" not \\\"httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.{name}\\\" or \\\"nodes-langchain.{name}\\\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_nodes\", \"description\": \"Search nodes by keywords. Modes: OR (any word), AND (all words), FUZZY (typos OK). Primary nodes ranked first. Examples: \\\"webhook\\\"\\u2192Webhook, \\\"http call\\\"\\u2192HTTP Request.\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search terms. Use quotes for exact phrase.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}, \"mode\": {\"type\": \"string\", \"description\": \"OR=any word, AND=all words, FUZZY=typo-tolerant\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_ai_tools\", \"description\": \"List 263 AI-optimized nodes. Note: ANY node can be AI tool! Connect any node to AI Agent's tool port. Community nodes need N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_documentation\", \"description\": \"Get readable docs with examples/auth/patterns. Better than raw schema! 87% coverage. Format: \\\"nodes-base.slack\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix: \\\"nodes-base.slack\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_database_statistics\", \"description\": \"Node stats: 525 total, 263 AI tools, 104 triggers, 87% docs coverage. Verifies MCP working.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_essentials\", \"description\": \"Get 10-20 key properties only (<5KB vs 100KB+). USE THIS FIRST! Includes examples. Format: \\\"nodes-base.httpRequest\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.httpRequest\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_node_properties\", \"description\": \"Find specific properties in a node (auth, headers, body, etc). Returns paths and descriptions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix\"}, \"query\": {\"type\": \"string\", \"description\": \"Property to find: \\\"auth\\\", \\\"header\\\", \\\"body\\\", \\\"json\\\"\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}}, \"required\": [\"nodeType\", \"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_for_task\", \"description\": \"Get pre-configured node for tasks: post_json_request, receive_webhook, query_database, send_slack_message, etc. Use list_tasks for all.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"Task name. See list_tasks for options.\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_tasks\", \"description\": \"List task templates by category: HTTP/API, Webhooks, Database, AI, Data Processing, Communication.\", \"schema\": {\"type\": \"object\", \"properties\": {\"category\": {\"type\": \"string\", \"description\": \"Filter by category (optional)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_operation\", \"description\": \"Validate node config. Checks required fields, types, operation rules. Returns errors with fixes. Essential for Slack/Sheets/DB nodes.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Your node configuration. Must include operation fields (resource/operation/action) if the node has multiple operations.\"}, \"profile\": {\"type\": \"string\", \"description\": \"Validation profile: minimal (only required fields), runtime (critical errors only), ai-friendly (balanced - default), strict (all checks including best practices)\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_minimal\", \"description\": \"Fast check for missing required fields only. No warnings/suggestions. Returns: list of missing fields.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The node configuration to check\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_property_dependencies\", \"description\": \"Shows property dependencies and visibility rules. Example: sendBody=true reveals body fields. Test visibility with optional config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to analyze (e.g., \\\"nodes-base.httpRequest\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional partial configuration to check visibility impact\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_as_tool_info\", \"description\": \"How to use ANY node as AI tool. Shows requirements, use cases, examples. Works for all nodes, not just AI-marked ones.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full node type WITH prefix: \\\"nodes-base.slack\\\", \\\"nodes-base.googleSheets\\\", etc.\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_node_templates\", \"description\": \"Find templates using specific nodes. 399 community workflows. Use FULL types: \\\"n8n-nodes-base.httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeTypes\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Array of node types to search for (e.g., [\\\"n8n-nodes-base.httpRequest\\\", \\\"n8n-nodes-base.openAi\\\"])\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of templates to return. Default 10.\"}}, \"required\": [\"nodeTypes\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_template\", \"description\": \"Get complete workflow JSON by ID. Ready to import. IDs from list_node_templates or search_templates.\", \"schema\": {\"type\": \"object\", \"properties\": {\"templateId\": {\"type\": \"number\", \"description\": \"The template ID to retrieve\"}}, \"required\": [\"templateId\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_templates\", \"description\": \"Search templates by name/description keywords. NOT for node types! For nodes use list_node_templates. Example: \\\"chatbot\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search query for template names/descriptions. NOT for node types! Examples: \\\"chatbot\\\", \\\"automation\\\", \\\"social media\\\", \\\"webhook\\\". For node-based search use list_node_templates instead.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of results. Default 20.\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_templates_for_task\", \"description\": \"Curated templates by task: ai_automation, data_sync, webhooks, email, slack, data_transform, files, scheduling, api, database.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"The type of task to get templates for\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow\", \"description\": \"Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The complete workflow JSON to validate. Must include nodes array and connections object.\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional validation settings\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_connections\", \"description\": \"Check workflow connections only: valid nodes, no cycles, proper triggers, AI tool links. Fast structure validation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON with nodes array and connections object.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_expressions\", \"description\": \"Validate n8n expressions: syntax {{}}, variables ($json/$node), references. Returns errors with locations.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON to check for expression errors.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_create_workflow\", \"description\": \"Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"Workflow name (required)\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow connections object. Keys are source node IDs, values define output connections\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional workflow settings (execution order, timezone, error handling)\"}}, \"required\": [\"name\", \"nodes\", \"connections\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow\", \"description\": \"Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_details\", \"description\": \"Get workflow details with metadata, version, execution stats. More info than get_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_structure\", \"description\": \"Get workflow structure: nodes and connections only. No parameter details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_minimal\", \"description\": \"Get minimal info: ID, name, active status, tags. Fast for listings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_full_workflow\", \"description\": \"Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"name\": {\"type\": \"string\", \"description\": \"New workflow name\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Complete array of workflow nodes (required if modifying workflow structure)\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Complete connections object (required if modifying workflow structure)\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow settings to update\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_partial_workflow\", \"description\": \"Update workflow incrementally with diff operations. Max 5 ops. Types: addNode, removeNode, updateNode, moveNode, enable/disableNode, addConnection, removeConnection, updateSettings, updateName, add/removeTag. See tools_documentation(\\\"n8n_update_partial_workflow\\\", \\\"full\\\") for details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"operations\": {\"type\": \"array\", \"description\": \"Array of diff operations to apply. Each operation must have a \\\"type\\\" field and relevant properties for that operation type.\"}, \"validateOnly\": {\"type\": \"boolean\", \"description\": \"If true, only validate operations without applying them\"}}, \"required\": [\"id\", \"operations\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_workflow\", \"description\": \"Permanently delete a workflow. This action cannot be undone.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_workflows\", \"description\": \"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of workflows to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"active\": {\"type\": \"boolean\", \"description\": \"Filter by active status\"}, \"tags\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Filter by tags (exact match)\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"excludePinnedData\": {\"type\": \"boolean\", \"description\": \"Exclude pinned data from response (default: true)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_validate_workflow\", \"description\": \"Validate workflow by ID. Checks nodes, connections, expressions. Returns errors/warnings/suggestions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to validate\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Validation options\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_trigger_webhook_workflow\", \"description\": \"Trigger workflow via webhook. Must be ACTIVE with Webhook node. Method must match config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"webhookUrl\": {\"type\": \"string\", \"description\": \"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)\"}, \"httpMethod\": {\"type\": \"string\", \"description\": \"HTTP method (must match webhook configuration, often GET)\"}, \"data\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Data to send with the webhook request\"}, \"headers\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Additional HTTP headers\"}, \"waitForResponse\": {\"type\": \"boolean\", \"description\": \"Wait for workflow completion (default: true)\"}}, \"required\": [\"webhookUrl\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_execution\", \"description\": \"Get details of a specific execution by ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include full execution data (default: false)\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_executions\", \"description\": \"List workflow executions (returns up to limit). Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of executions to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"workflowId\": {\"type\": \"string\", \"description\": \"Filter by workflow ID\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"status\": {\"type\": \"string\", \"description\": \"Filter by execution status\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include execution data (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_execution\", \"description\": \"Delete an execution record. This only removes the execution history, not any data processed.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_health_check\", \"description\": \"Check n8n instance health and API connectivity. Returns status and available features.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_available_tools\", \"description\": \"List available n8n tools and capabilities.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_diagnostic\", \"description\": \"Diagnose n8n API config. Shows tool status, API connectivity, env vars. Helps troubleshoot missing tools.\", \"schema\": {\"type\": \"object\", \"properties\": {\"verbose\": {\"type\": \"boolean\", \"description\": \"Include detailed debug information (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}]}]",
      "server_label": "N8N"
    },
    {
      "id": "mcp_687d4571b8a881989d64d540390874aa0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": null,
      "arguments": "{\"tools\":[{\"name\":\"n8n_list_workflows\",\"parameters\":{\"limit\":20}}]}",
      "error": {
        "type": "http_error",
        "code": 424,
        "message": "424: unhandled errors in a TaskGroup (1 sub-exception)"
      },
      "name": "MCP_Client1",
      "output": null,
      "server_label": "N8N"
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "It seems there’s still an issue:  \n- I attempted to fetch your workflows using the available MCP n8n tools, but the MCP server responded with an error (“None”).\n\n**Troubleshooting tips:**\n1. **Server/Access Issues:** The MCP/n8n server might not be fully set up, or there could be a problem with permissions or connectivity.\n2. **Session/Authorization:** Sometimes, integrations need explicit permissions or a user context (login) to return user-specific data.\n3. **Custom Setup:** Your n8n instance might be customized, or workflow listing might be disabled/restricted.\n\n**What you can do:**\n- If you manage your n8n/MCP server, check logs for recent errors.\n- Verify that the API user has permission to list workflows.\n- If you provide more detail about your setup or the error, I can guide you step-by-step!\n\nWould you like to try another command (e.g., a health check or node list), or need help troubleshooting further?"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "try a health check "
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "try a health check\n\n"
        }
      ]
    },
    {
      "id": "mcp_687d63e140c08198bad18e0b26fadd320a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": null,
      "arguments": "{\"tools\":[{\"name\":\"n8n_health_check\",\"description\":\"Check n8n instance health and API connectivity. Returns status and available features.\",\"schema\":{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}]}",
      "error": null,
      "name": "MCP_Client1",
      "output": "[{\"tools\": [{\"name\": \"tools_documentation\", \"description\": \"Get documentation for n8n MCP tools. Call without parameters for quick start guide. Use topic parameter to get documentation for specific tools. Use depth='full' for comprehensive documentation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"topic\": {\"type\": \"string\", \"description\": \"Tool name (e.g., \\\"search_nodes\\\") or \\\"overview\\\" for general guide. Leave empty for quick reference.\"}, \"depth\": {\"type\": \"string\", \"description\": \"Level of detail. \\\"essentials\\\" (default) for quick reference, \\\"full\\\" for comprehensive docs.\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_nodes\", \"description\": \"List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \\\"n8n-nodes-base\\\" or \\\"@n8n/n8n-nodes-langchain\\\". Categories: trigger/transform/output/input.\", \"schema\": {\"type\": \"object\", \"properties\": {\"package\": {\"type\": \"string\", \"description\": \"\\\"n8n-nodes-base\\\" (core) or \\\"@n8n/n8n-nodes-langchain\\\" (AI)\"}, \"category\": {\"type\": \"string\", \"description\": \"trigger|transform|output|input|AI\"}, \"developmentStyle\": {\"type\": \"string\", \"description\": \"Usually \\\"programmatic\\\"\"}, \"isAITool\": {\"type\": \"boolean\", \"description\": \"Filter AI-capable nodes\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 50, use 200+ for all)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_info\", \"description\": \"Get FULL node schema (100KB+). TIP: Use get_node_essentials first! Returns all properties/operations/credentials. Prefix required: \\\"nodes-base.httpRequest\\\" not \\\"httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.{name}\\\" or \\\"nodes-langchain.{name}\\\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_nodes\", \"description\": \"Search nodes by keywords. Modes: OR (any word), AND (all words), FUZZY (typos OK). Primary nodes ranked first. Examples: \\\"webhook\\\"\\u2192Webhook, \\\"http call\\\"\\u2192HTTP Request.\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search terms. Use quotes for exact phrase.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}, \"mode\": {\"type\": \"string\", \"description\": \"OR=any word, AND=all words, FUZZY=typo-tolerant\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_ai_tools\", \"description\": \"List 263 AI-optimized nodes. Note: ANY node can be AI tool! Connect any node to AI Agent's tool port. Community nodes need N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_documentation\", \"description\": \"Get readable docs with examples/auth/patterns. Better than raw schema! 87% coverage. Format: \\\"nodes-base.slack\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix: \\\"nodes-base.slack\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_database_statistics\", \"description\": \"Node stats: 525 total, 263 AI tools, 104 triggers, 87% docs coverage. Verifies MCP working.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_essentials\", \"description\": \"Get 10-20 key properties only (<5KB vs 100KB+). USE THIS FIRST! Includes examples. Format: \\\"nodes-base.httpRequest\\\"\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type: \\\"nodes-base.httpRequest\\\"\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_node_properties\", \"description\": \"Find specific properties in a node (auth, headers, body, etc). Returns paths and descriptions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full type with prefix\"}, \"query\": {\"type\": \"string\", \"description\": \"Property to find: \\\"auth\\\", \\\"header\\\", \\\"body\\\", \\\"json\\\"\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Max results (default 20)\"}}, \"required\": [\"nodeType\", \"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_for_task\", \"description\": \"Get pre-configured node for tasks: post_json_request, receive_webhook, query_database, send_slack_message, etc. Use list_tasks for all.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"Task name. See list_tasks for options.\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_tasks\", \"description\": \"List task templates by category: HTTP/API, Webhooks, Database, AI, Data Processing, Communication.\", \"schema\": {\"type\": \"object\", \"properties\": {\"category\": {\"type\": \"string\", \"description\": \"Filter by category (optional)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_operation\", \"description\": \"Validate node config. Checks required fields, types, operation rules. Returns errors with fixes. Essential for Slack/Sheets/DB nodes.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Your node configuration. Must include operation fields (resource/operation/action) if the node has multiple operations.\"}, \"profile\": {\"type\": \"string\", \"description\": \"Validation profile: minimal (only required fields), runtime (critical errors only), ai-friendly (balanced - default), strict (all checks including best practices)\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_node_minimal\", \"description\": \"Fast check for missing required fields only. No warnings/suggestions. Returns: list of missing fields.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to validate (e.g., \\\"nodes-base.slack\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The node configuration to check\"}}, \"required\": [\"nodeType\", \"config\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_property_dependencies\", \"description\": \"Shows property dependencies and visibility rules. Example: sendBody=true reveals body fields. Test visibility with optional config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"The node type to analyze (e.g., \\\"nodes-base.httpRequest\\\")\"}, \"config\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional partial configuration to check visibility impact\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_node_as_tool_info\", \"description\": \"How to use ANY node as AI tool. Shows requirements, use cases, examples. Works for all nodes, not just AI-marked ones.\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeType\": {\"type\": \"string\", \"description\": \"Full node type WITH prefix: \\\"nodes-base.slack\\\", \\\"nodes-base.googleSheets\\\", etc.\"}}, \"required\": [\"nodeType\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"list_node_templates\", \"description\": \"Find templates using specific nodes. 399 community workflows. Use FULL types: \\\"n8n-nodes-base.httpRequest\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"nodeTypes\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Array of node types to search for (e.g., [\\\"n8n-nodes-base.httpRequest\\\", \\\"n8n-nodes-base.openAi\\\"])\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of templates to return. Default 10.\"}}, \"required\": [\"nodeTypes\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_template\", \"description\": \"Get complete workflow JSON by ID. Ready to import. IDs from list_node_templates or search_templates.\", \"schema\": {\"type\": \"object\", \"properties\": {\"templateId\": {\"type\": \"number\", \"description\": \"The template ID to retrieve\"}}, \"required\": [\"templateId\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"search_templates\", \"description\": \"Search templates by name/description keywords. NOT for node types! For nodes use list_node_templates. Example: \\\"chatbot\\\".\", \"schema\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"Search query for template names/descriptions. NOT for node types! Examples: \\\"chatbot\\\", \\\"automation\\\", \\\"social media\\\", \\\"webhook\\\". For node-based search use list_node_templates instead.\"}, \"limit\": {\"type\": \"number\", \"description\": \"Maximum number of results. Default 20.\"}}, \"required\": [\"query\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"get_templates_for_task\", \"description\": \"Curated templates by task: ai_automation, data_sync, webhooks, email, slack, data_transform, files, scheduling, api, database.\", \"schema\": {\"type\": \"object\", \"properties\": {\"task\": {\"type\": \"string\", \"description\": \"The type of task to get templates for\"}}, \"required\": [\"task\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow\", \"description\": \"Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The complete workflow JSON to validate. Must include nodes array and connections object.\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional validation settings\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_connections\", \"description\": \"Check workflow connections only: valid nodes, no cycles, proper triggers, AI tool links. Fast structure validation.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON with nodes array and connections object.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"validate_workflow_expressions\", \"description\": \"Validate n8n expressions: syntax {{}}, variables ($json/$node), references. Returns errors with locations.\", \"schema\": {\"type\": \"object\", \"properties\": {\"workflow\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"The workflow JSON to check for expression errors.\"}}, \"required\": [\"workflow\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_create_workflow\", \"description\": \"Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"Workflow name (required)\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow connections object. Keys are source node IDs, values define output connections\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Optional workflow settings (execution order, timezone, error handling)\"}}, \"required\": [\"name\", \"nodes\", \"connections\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow\", \"description\": \"Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_details\", \"description\": \"Get workflow details with metadata, version, execution stats. More info than get_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_structure\", \"description\": \"Get workflow structure: nodes and connections only. No parameter details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_workflow_minimal\", \"description\": \"Get minimal info: ID, name, active status, tags. Fast for listings.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_full_workflow\", \"description\": \"Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"name\": {\"type\": \"string\", \"description\": \"New workflow name\"}, \"nodes\": {\"type\": \"array\", \"description\": \"Complete array of workflow nodes (required if modifying workflow structure)\"}, \"connections\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Complete connections object (required if modifying workflow structure)\"}, \"settings\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Workflow settings to update\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_update_partial_workflow\", \"description\": \"Update workflow incrementally with diff operations. Max 5 ops. Types: addNode, removeNode, updateNode, moveNode, enable/disableNode, addConnection, removeConnection, updateSettings, updateName, add/removeTag. See tools_documentation(\\\"n8n_update_partial_workflow\\\", \\\"full\\\") for details.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to update\"}, \"operations\": {\"type\": \"array\", \"description\": \"Array of diff operations to apply. Each operation must have a \\\"type\\\" field and relevant properties for that operation type.\"}, \"validateOnly\": {\"type\": \"boolean\", \"description\": \"If true, only validate operations without applying them\"}}, \"required\": [\"id\", \"operations\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_workflow\", \"description\": \"Permanently delete a workflow. This action cannot be undone.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_workflows\", \"description\": \"List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of workflows to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"active\": {\"type\": \"boolean\", \"description\": \"Filter by active status\"}, \"tags\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Filter by tags (exact match)\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"excludePinnedData\": {\"type\": \"boolean\", \"description\": \"Exclude pinned data from response (default: true)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_validate_workflow\", \"description\": \"Validate workflow by ID. Checks nodes, connections, expressions. Returns errors/warnings/suggestions.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Workflow ID to validate\"}, \"options\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Validation options\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_trigger_webhook_workflow\", \"description\": \"Trigger workflow via webhook. Must be ACTIVE with Webhook node. Method must match config.\", \"schema\": {\"type\": \"object\", \"properties\": {\"webhookUrl\": {\"type\": \"string\", \"description\": \"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)\"}, \"httpMethod\": {\"type\": \"string\", \"description\": \"HTTP method (must match webhook configuration, often GET)\"}, \"data\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Data to send with the webhook request\"}, \"headers\": {\"type\": \"object\", \"additionalProperties\": {}, \"description\": \"Additional HTTP headers\"}, \"waitForResponse\": {\"type\": \"boolean\", \"description\": \"Wait for workflow completion (default: true)\"}}, \"required\": [\"webhookUrl\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_get_execution\", \"description\": \"Get details of a specific execution by ID.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include full execution data (default: false)\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_executions\", \"description\": \"List workflow executions (returns up to limit). Check hasMore/nextCursor for pagination.\", \"schema\": {\"type\": \"object\", \"properties\": {\"limit\": {\"type\": \"number\", \"description\": \"Number of executions to return (1-100, default: 100)\"}, \"cursor\": {\"type\": \"string\", \"description\": \"Pagination cursor from previous response\"}, \"workflowId\": {\"type\": \"string\", \"description\": \"Filter by workflow ID\"}, \"projectId\": {\"type\": \"string\", \"description\": \"Filter by project ID (enterprise feature)\"}, \"status\": {\"type\": \"string\", \"description\": \"Filter by execution status\"}, \"includeData\": {\"type\": \"boolean\", \"description\": \"Include execution data (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_delete_execution\", \"description\": \"Delete an execution record. This only removes the execution history, not any data processed.\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"Execution ID to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_health_check\", \"description\": \"Check n8n instance health and API connectivity. Returns status and available features.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_list_available_tools\", \"description\": \"List available n8n tools and capabilities.\", \"schema\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}, {\"name\": \"n8n_diagnostic\", \"description\": \"Diagnose n8n API config. Shows tool status, API connectivity, env vars. Helps troubleshoot missing tools.\", \"schema\": {\"type\": \"object\", \"properties\": {\"verbose\": {\"type\": \"boolean\", \"description\": \"Include detailed debug information (default: false)\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}]}]",
      "server_label": "N8N"
    },
    {
      "id": "mcp_687d63eb05d8819886c2ec4d221306bd0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": null,
      "arguments": "{\"tools\":[{\"name\":\"n8n_health_check\",\"parameters\":{}}]}",
      "error": {
        "type": "http_error",
        "code": 400,
        "message": "400: Client error '400 Bad Request' for url 'https://n8n.srv914688.hstgr.cloud/mcp/N8N'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
      },
      "name": "MCP_Client1",
      "output": null,
      "server_label": "N8N"
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "I tried to perform a health check on the n8n instance, but again the MCP server returned an error and no further information.\n\nThis suggests there might be a connectivity or configuration issue with your MCP or n8n server or the API access used here.\n\nIf you want, I can help you with:\n- Troubleshooting steps or configuration advice\n- Checking another capability or node\n- Constructing workflows locally instead\n\nLet me know how you want to proceed!"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "try once more"
        }
      ]
    },
    {
      "id": "mcp_687d6553fb548198bbeabc59659f28ac0a8dd91b150e0e64",
      "type": "mcp_call",
      "approval_request_id": null,
      "arguments": "{\"tools\":[{\"name\":\"n8n_health_check\",\"parameters\":{}}]}",
      "error": null,
      "name": "MCP_Client1",
      "output": "Error during node execution: Failed to execute operation: Credential with ID \"VeXSgYV8tTM7bl42\" does not exist for type \"mcpClientApi\".",
      "server_label": "N8N"
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "The health check failed again, and this time I see a useful error message:\n\n**Credential with ID \"VeXSgYV8tTM7bl42\" does not exist for type \"mcpClientApi\".**\n\nThis means the n8n MCP integration is missing or misconfigured with a required API credential to access your MCP server.\n\n### What to do next:\n- You (or your admin) need to create or configure the MCP API credential in n8n with the correct ID.\n- Make sure the API token or credentials for MCP are properly set up and assigned to your workflows or API calls.\n\nWithout this credential, I’m unable to fetch workflow or perform health check data from MCP.\n\nWould you like suggestions on how to configure credentials in n8n? Or help with any other task that doesn't need the MCP connection?"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "perform a health check"
        }
      ]
    },
    {
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "The health check call failed because the needed API credential for MCP (\"mcpClientApi\") is missing or misconfigured. I don’t have access to the required credential, so I cannot successfully perform the health check at this time.\n\nIf you can add or fix the MCP API credential in your n8n setup, I’ll then be able to make these calls.\n\nMeanwhile, if you'd like, I can help you with:\n- Guidance on setting up credentials in n8n\n- Describing health check steps you can do manually\n- Trying other n8n commands that don't require the MCP credential\n\nPlease let me know how you’d like to proceed!"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "that should have fixed the issue"
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "that should have fixed the issue\n\n"
        }
      ]
    },
    {
      "type": "reasoning",
      "id": "rs_687d6a3e395c81988494e304cdf34aa00a8dd91b150e0e64",
      "summary": []
    },
    {
      "id": "msg_687d6a3f05f08198bb6a8130f6930b790a8dd91b150e0e64",
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "Understood—let’s give the health check another try."
        }
      ]
    },
    {
      "role": "user",
      "content": [
        {
          "type": "input_text",
          "text": "did u?"
        }
      ]
    },
    {
      "type": "reasoning",
      "id": "rs_687d6a788c848198884da324e00a09000a8dd91b150e0e64",
      "summary": []
    },
    {
      "type": "reasoning",
      "id": "rs_687d6a799f1c81988f08df3234d06dab0a8dd91b150e0e64",
      "summary": []
    },
    {
      "id": "msg_687d6a79f428819885569beaf5262a460a8dd91b150e0e64",
      "role": "assistant",
      "content": [
        {
          "type": "output_text",
          "text": "Attempting the health check again…"
        }
      ]
    }
  ],
  text: {
    "format": {
      "type": "text"
    }
  },
  reasoning: {
    "effort": "medium"
  },
  tools: [
    {
      "type": "mcp",
      "server_label": "zapier",
      "server_url": "https://mcp.zapier.com/api/mcp/mcp",
      "server_description": "https://mcp.zapier.com/api/mcp/mcp",
      "headers": {
        "Authorization": "Bearer ZWZkOGJjNDktNGM5My00N2ViLTg4ZjMtZTMwY2UyYTAxMTFiOmQ5YmU5YWFiLWFiMzgtNDhmZC1hNWZjLTI5MDFmNDVhMTBiNw=="
      },
      "allowed_tools": [
        "add_tools",
        "edit_tools",
        "discord_add_role",
        "github_find_branch",
        "google_docs_create_document_from_template",
        "gmail_find_email",
        "gmail_add_label_to_email",
        "github_check_organization_membership",
        "github_find_organization",
        "github_find_repository",
        "notion_retrieve_block_children",
        "notion_get_page_comments",
        "notion_find_database_item",
        "notion_get_page_and_children",
        "gmail_archive_email",
        "gmail_delete_email",
        "github_find_issue",
        "github_find_pull_request",
        "github_find_user",
        "github_create_comment",
        "github_create_branch",
        "github_create_or_update_file",
        "github_delete_branch",
        "github_create_gist",
        "github_create_issue",
        "github_create_pull_request",
        "github_set_profile_status",
        "notion_find_page_by_title",
        "github_submit_review",
        "github_update_issue",
        "github_update_pull_request",
        "notion_archive_database_item",
        "notion_add_comment",
        "notion_create_database_item",
        "notion_create_page",
        "notion_add_content_to_page",
        "notion_restore_database_item",
        "discord_find_channel",
        "discord_find_user",
        "notion_update_database_item",
        "notion_api_request_beta",
        "notion_retrieve_a_page",
        "notion_retrieve_database",
        "discord_create_new_forum_post",
        "discord_remove_user_role",
        "discord_rename_channel",
        "discord_send_channel_message",
        "discord_send_direct_message",
        "discord_send_message_in_forum_post",
        "discord_api_request_beta",
        "elevenlabs_convert_text_to_speech",
        "elevenlabs_api_request_beta",
        "google_docs_find_a_document",
        "google_docs_append_text_to_document",
        "google_docs_upload_document",
        "google_docs_create_document_from_text",
        "google_docs_api_request_beta",
        "gmail_create_draft",
        "gmail_create_draft_reply",
        "gmail_create_label",
        "gmail_send_email",
        "gmail_remove_label_from_email",
        "gmail_remove_label_from_conversation",
        "gmail_reply_to_email"
      ],
      "require_approval": "always"
    }
  ],
  store: true
});
